name: CD Step - Deploy to AWS

on: workflow_dispatch
  # pull_request:
  #   branches: 
  #     - main
  #   types: [closed]

env:
  AWS_REGION: us-east-1
  APPLICATION_NAME: dashg-template-web
  tf_version: '1.9.3'
  tg_version: '0.63.6'
  working_dir: 'deploy/terragrunt/dev/aws/spa-website'

jobs:
  deploy:
    #if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    steps:
      - name: Get the repo
        uses: actions/checkout@v4
      - name: Checkout cloud-deployment
        uses: actions/checkout@v4
        with:
          repository: dashg-enterprises/cloud-deployment
          token: ${{ secrets.CLOUD_DEPLOYMENT_PAT }}
          path: deploy
          sparse-checkout: |
            terragrunt/dev/aws/spa-website
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run build
      - run: ls -R terragrunt
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Deploy
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'apply --terragrunt-source .//iac'
      # - name: Deploy build to bucket
      #   run: aws s3 cp dist/ s3://${{ env.APPLICATION_NAME }}-bucket/ --recursive
